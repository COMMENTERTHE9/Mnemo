// Mnemo Cookie Sync - Background Service Worker

let MNEMO_SERVER = 'http://167.99.1.8/api/v1/auth/cookies';

// Load server URL from settings (override default if set)
chrome.storage.sync.get(['serverUrl'], (result) => {
  if (result.serverUrl) {
    MNEMO_SERVER = result.serverUrl;
  }
});

// Function to get YouTube cookies and format them
async function getYouTubeCookies() {
  const cookies = await chrome.cookies.getAll({ domain: '.youtube.com' });
  
  // Format cookies in Netscape format
  let cookieText = '# Netscape HTTP Cookie File\n';
  cookieText += '# This file is generated by Mnemo Cookie Sync\n\n';
  
  cookies.forEach(cookie => {
    const httpOnly = cookie.httpOnly ? '#HttpOnly_' : '';
    const domain = cookie.domain.startsWith('.') ? cookie.domain : '.' + cookie.domain;
    const includeSubdomains = 'TRUE';
    const path = cookie.path;
    const secure = cookie.secure ? 'TRUE' : 'FALSE';
    const expiry = cookie.expirationDate ? Math.floor(cookie.expirationDate) : '0';
    const name = cookie.name;
    const value = cookie.value;
    
    cookieText += `${httpOnly}${domain}\t${includeSubdomains}\t${path}\t${secure}\t${expiry}\t${name}\t${value}\n`;
  });
  
  return cookieText;
}

// Function to send cookies to Mnemo server
async function syncCookies() {
  if (!MNEMO_SERVER) {
    console.error('No server URL configured. Please set it in extension options.');
    return false;
  }
  
  try {
    const cookieText = await getYouTubeCookies();
    
    const response = await fetch(MNEMO_SERVER, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ cookies: cookieText })
    });
    
    if (response.ok) {
      console.log('Cookies synced successfully');
      chrome.storage.local.set({ lastSync: Date.now() });
      return true;
    } else {
      console.error('Failed to sync cookies:', response.statusText);
      return false;
    }
  } catch (error) {
    console.error('Error syncing cookies:', error);
    return false;
  }
}

// Listen for cookie changes on YouTube
chrome.cookies.onChanged.addListener((changeInfo) => {
  if (changeInfo.cookie.domain.includes('youtube.com')) {
    // Debounce to avoid too many syncs
    chrome.storage.local.get(['lastSync'], (result) => {
      const lastSync = result.lastSync || 0;
      if (Date.now() - lastSync > 60000) { // Only sync once per minute
        syncCookies();
      }
    });
  }
});

// Sync when extension is installed or updated
chrome.runtime.onInstalled.addListener(() => {
  syncCookies();
});

// Listen for messages from popup
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === 'syncNow') {
    syncCookies().then(success => {
      sendResponse({ success });
    });
    return true; // Will respond asynchronously
  }
  
  if (request.action === 'settingsUpdated') {
    // Reload server URL from settings
    chrome.storage.sync.get(['serverUrl'], (result) => {
      if (result.serverUrl) {
        MNEMO_SERVER = result.serverUrl;
      }
    });
  }
});